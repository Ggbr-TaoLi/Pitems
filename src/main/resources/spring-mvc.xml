<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 开启注解支持-->
	<mvc:annotation-driven />
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.phonemarket.controller"></context:component-scan>
	<!-- 视图解析器对象 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean id="InternalResourceViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!--视图解析器 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760" />
	</bean>
	<!-- 静态资源处理  css js imgs -->
	<!-- 配置静态资源不过滤：location 表示路径，mapping 表示文件，**表示该目录下的文件以及子目录的文件 -->
	<mvc:resources location="/resources/" mapping="/resources/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />
	<mvc:view-controller path="/" view-name="index" />
	
	<mvc:interceptors>
		<!-- 对特定的请求进行拦截 -->
		<mvc:interceptor>
			<mvc:mapping path="/goods/detail" />
			<mvc:mapping path="/cart/*" />
			<bean id="UserLoginInterceptor" class="com.phonemarket.interceptor.UserLoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>